---
// ObnoxiousButton.astro

interface Props {
  buttonText?: string;
  messageAfterOneClick?: string;
  messageAfterFiveClicks?: string;
  messageAfterTenClicks?: string;
  messageAfterFifteenClicks?: string;
  finalMessageAfterTwentyClicks?: string;
  hiddenMessage?: string;
  additionalMessageAfterTwentyFiveClicks?: string;
}

const {
  buttonText = "DON'T PRESS ME",
  messageAfterOneClick = 'HOW DARE YOU?',
  messageAfterFiveClicks = 'PERSISTENT, ARE WE NOT?',
  messageAfterTenClicks = 'OH, COME ON NOW!',
  messageAfterFifteenClicks = 'REALLY? STILL CLICKING?',
  finalMessageAfterTwentyClicks = 'You are a true Pyoneer!',
  hiddenMessage = 'I want to work with persistent people like you.',
  additionalMessageAfterTwentyFiveClicks = 'Enough, buddy...'
} = Astro.props;
---

<button id="obnoxious-button" class="rounded-md bg-black">
  <span class="block text-black bg-amber-400 -translate-x-2 -translate-y-2 rounded-md border-2 border-black p-4 text-xl transition-all hover:-translate-y-3 active:translate-x-0 active:translate-y-0"
        _={`init
             set :finished to false
             set my clickCount to 0
           end
           on click
             increment my clickCount
             if not :finished
               if my clickCount > 0
                 put '${messageAfterOneClick}' into me
               end
               if my clickCount > 5
                 put '${messageAfterFiveClicks}' into me
               end
               if my clickCount > 10
                 put '${messageAfterTenClicks}' into me
               end
               if my clickCount > 15
                 put '${messageAfterFifteenClicks}' into me
               end
               if my clickCount == 20
                 put '${finalMessageAfterTwentyClicks}' into me
                 show #hidden-message with *visibility
                 set :finished to true
               end
             else
               if my clickCount == 25
                 put '${additionalMessageAfterTwentyFiveClicks}' into me
               end
             end
           end
           on touchstart
             add .animate-press
           end
           on touchend
             remove .animate-press
           end`}>
    {buttonText}
  </span>
</button>

<span id="hidden-message" class="mt-3 invisible">
  {hiddenMessage}
</span>

<style>
  /* This is a hack to make the button work on mobile */
  @keyframes btnPressAnimation {
    0% {
      transform: translate(-2px, -2px);
    }
    50% {
      transform: translate(0, 0);
    }
    100% {
      transform: translate(-2px, -2px);
    }
  }

  .animate-press {
    animation: btnPressAnimation 0.2s forwards;
  }
</style>
