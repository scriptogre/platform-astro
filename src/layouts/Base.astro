---
import '../css/base.css';
import '@fontsource/bebas-neue';

import TopNav from "../components/TopNav.astro";
import SideNav from "../components/SideNav.astro";
import Footer from "../components/Footer.astro";

const { title, drawerClasses } = Astro.props
---
<!doctype html>
<html lang="en" class="scroll-smooth dark" style="color-scheme: dark" data-theme="dark">
<head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="htmx-config" content='{"globalViewTransitions":true}' />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title} | The Pyoneer Project</title>
    <script defer src="https://unpkg.com/htmx.org"></script>
    <script defer src="https://unpkg.com/hyperscript.org@0.9.12"></script>
</head>

<body _="on mutation if <dialog.modal/>'s length is greater than 1 remove first from <dialog.modal/>">

{/* Drawer - https://daisyui.com/components/drawer/ */}
<div class:list={['drawer', drawerClasses]}>
    <input id="drawer-toggle" class="drawer-toggle" type="checkbox" autocomplete="off" hx-preserve />

    <div class="drawer-side lg:max-w-fit !fixed z-10">
        <label for="drawer-toggle" aria-label="close sidebar" class="drawer-overlay lg:hidden"></label>
        <SideNav class="p-2 mt-16"
                 hx-boost="true"
                 hx-target=".drawer"
                 hx-select=".drawer"
                 hx-swap="outerHTML"/>
    </div>


    <div class="drawer-content min-w-full">
        <TopNav class="px-4" hx-preserve />

        <main id="content" class="px-6 xs:px-7 animate-fade animate-ease-in animate-duration-75">
            <slot>
                <!-- Page content goes here -->
            </slot>
        </main>

        <Footer class="p-12 pb-16 lg:mt-12" />
    </div>
</div>
</body>
</html>

<style is:global>
    /* Sync drawer state with hamburger button (inside <TopNav />) */
    .drawer:has(.drawer-toggle:checked) label[for='drawer-toggle'][class*='swap'] {
        @apply swap-active
    }
</style>