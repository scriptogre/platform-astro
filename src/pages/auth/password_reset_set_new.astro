---
import { updateUserPassword } from "../../auth";
import Modal from "../../components/Modal.astro";
import { supabase } from "../../lib/supabase";
import FormError from "../../components/auth/FormError.astro";

export const prerender = false;
export const partial = true;

const { request, redirect, url } = Astro;

let error = null;

if (request.method == "GET") {
  try {
    // If the user is opening the link from the email, first exchange the code for a session.
    await supabase.auth.exchangeCodeForSession(url.searchParams.get("code"));
  } catch (e) {
    return redirect("/auth/password_reset_invalid/");
  }
}

if (request.method === "POST") {
  const formData = await request.formData();
  const newPassword = formData.get("new_password")?.toString();
  const result = await updateUserPassword(newPassword);

  error = result.error;

  if (!error) {
    return redirect("/auth/password_reset_success/");
  }

  // Otherwise, render form with error
}
---

<Modal>
  <h3 class="mb-6 text-xl font-bold">Set a new password</h3>

  <form
    hx-post="/auth/password_reset_set_new/"
    hx-swap="outerHTML"
    hx-target=".modal"
    data-astro-reload
  >
    {!!error && <FormError error={error} />}

    <input
      type="password"
      name="new_password"
      placeholder="New Password"
      autocomplete="password"
      maxlength="320"
      class="input input-bordered input-ghost mb-4 w-full"
    />

    <button type="submit" class="btn btn-warning mb-4 w-full">
      Save new password
    </button>

    <span class="text-primary-600 text-sm font-light">
      Remembered your password?
      <a
        id="back-to-login-link"
        hx-get="/auth/login/"
        hx-swap="outerHTML"
        hx-target=".modal"
        class="font-medium text-primary-content hover:cursor-pointer hover:underline"
      >
        Sign in
      </a>
    </span>
  </form>
</Modal>
