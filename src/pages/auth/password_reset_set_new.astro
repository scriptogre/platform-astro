---
import {updateUserPassword} from "../../auth";
import Modal from "../../components/Modal.astro";
import {supabase} from "../../lib/supabase";
import FormError from "../../components/auth/FormError.astro";

export const prerender = false
export const partial = true

const { request, redirect, url } = Astro;

let error = null

if (request.method == 'GET') {
    try {
        // If the user is opening the link from the email, first exchange the code for a session.
        await supabase.auth.exchangeCodeForSession(url.searchParams.get("code"))
    } catch (e) {
        return redirect("/auth/password_reset_invalid/")
    }
}

if (request.method === 'POST') {
    const formData = await request.formData()
    const newPassword = formData.get("new_password")?.toString()
    const result = await updateUserPassword(newPassword)

    error = result.error

    if (!error) {
        return redirect("/auth/password_reset_success/")
    }

    // Otherwise, render form with error
}
---
<Modal>
    <h3 class="font-bold text-xl mb-6">
        Set a new password
    </h3>

    <form hx-post="/auth/password_reset_set_new/"
          hx-swap="outerHTML"
          hx-target=".modal"
          data-astro-reload>

        {!!error && <FormError error={error} />}

        <input type="password" name="new_password" placeholder="New Password" autocomplete="password" maxlength="320"
               class="input input-bordered input-ghost w-full mb-4">

        <button type="submit" class="btn btn-warning w-full mb-4">
            Save new password
        </button>

        <span class="text-sm font-light text-primary-600">
            Remembered your password?
            <a id="back-to-login-link"
               hx-get="/auth/login/"
               hx-swap="outerHTML"
               hx-target=".modal"
               class="font-medium text-primary-content hover:underline hover:cursor-pointer">
                Sign in
            </a>
        </span>
    </form>
</Modal>